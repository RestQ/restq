# Generated by Buildr 1.4.9, change to your liking


# Version number for this release
VERSION_NUMBER = "1.0.0"
# Group identifier for your projects
GROUP = "restq"
COPYRIGHT = ""

# Specify Maven 2.0 remote repositories here, like this:
repositories.remote << "http://repo1.maven.org/maven2"
repositories.remote << 'http://artifactory.nm.flipkart.com:8081/artifactory/libs-releases'
repositories.remote << 'http://artifactory.nm.flipkart.com:8081/artifactory/libs-snapshots-local'

SPRING = transitive(group('spring-beans', 'spring-context', :under => 'org.springframework', :version => '3.1.0.RELEASE'))
REST_EXPRESS = transitive('com.strategicgains:RestExpress:jar:0.8.1')
SLF4J = transitive('org.slf4j:slf4j-log4j12:jar:1.6.6')
MOCKITO = 'org.mockito:mockito-all:jar:1.9.0'
GSON = 'com.google.code.gson:gson:jar:2.2.2'

desc "The Restq project"
define "restq" do
  project.version = VERSION_NUMBER
  project.group = GROUP
  manifest["Implementation-Vendor"] = COPYRIGHT

  eclipse.natures ['org.eclipse.jdt.core.javanature', 'org.eclipse.jem.workbench.JavaEMFNature', 'org.eclipse.wst.common.modulecore.ModuleCoreNature', 'org.eclipse.wst.common.project.facet.core.nature', 'org.eclipse.wst.jsdt.core.jsNature']
  eclipse.builders ['org.eclipse.wst.jsdt.core.javascriptValidator', 'org.eclipse.jdt.core.javabuilder', 'org.eclipse.wst.common.project.facet.core.builder', 'org.eclipse.wst.validation.validationbuilder']
  eclipse.classpath_containers ['org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6']
	  
  desc "Core code"
  define "core" do
	  compile.with REST_EXPRESS, SLF4J, SPRING, GSON
    test.using :testng
    test.with MOCKITO
	  package :jar
  end
  
  desc "Messaging code"
  define "messaging" do
	  compile.with REST_EXPRESS, SLF4J, SPRING, GSON, project('journal'), project('core')
    test.using :testng
    test.with MOCKITO
	  package :jar
  end
  
  desc "Cluster code"
  define "cluster" do
	  compile.with REST_EXPRESS, SLF4J, SPRING, GSON, project('core'), project('journal')
    test.using :testng
    test.with MOCKITO
	  package :jar
  end
  
  desc "Journal code"
  define "journal" do
	  compile.with REST_EXPRESS, SLF4J, SPRING, GSON, project('core')
    test.using :testng
    test.with MOCKITO
	  package :jar
  end
  
  desc "Server code"
  define "server" do
	  compile.with REST_EXPRESS, SLF4J, SPRING, GSON, project('cluster'), project('core'), project('messaging'), project('journal')
    test.using :testng
    test.with MOCKITO
	  package :jar
    java_opts = Array.new
    java_opts << ENV['JAVA_OPTS'].split(' ') if ENV['JAVA_OPTS']
    run.using :main => "org.restq.server.Bootstrap", :java_args => java_opts
  end
  
  
end
